solidity oop live - 1 notes:-
	content :- 
		i) Contract and Objects
		ii) Polymorphism
		iii) Inheritance
		- a) import
		iv) Library
		v) Abstract Class
		vi) Error and Revert
		vii) Interface
		viii) Event

i) Contract and Objects :-
- Solidity Contract are like a class in any other object-oriented programming language.
- a class is a description of an object's property and behavior.
- Object is a real world entity.
- e.g 	Contract Book {
		// code like different function's for book
	}
- so agar hame is contract ko acess karna hai , ya kisi dusre contract me acess karna hai to hame iska object banana padega.
- Book obj = new Book();
- to "obj" ke madat se ham contract ko acess kar payenge, ham contract ke andar ke function's ko bhi acess kar payenge with the help of "obj"
- Note :- Constructor of a contract is called as soon as its contract is created.
- agar ham ek constructor bana dete hai hamare contract me to tab dikkat nahi, lekin agar ham constructor nahi banate hai to solidity hamare liye ek constructor bana deti hai, jiska as such hamare uper koi impact nai hota.
- ek smart contract me ek he constructor ho sakta hai.
- this is understand much better with code and example in file "ContractObjects.sol" and "ContractObjectWithCalculatorExample.sol" file.

ii) Inheritance :-
- Inheritance in Solidity is the procedure in which one contract inherits the attributes and methods of another contract.
- all the code for understanding concept is written in file "Inheritance.sol" file 
- inheritance me constructor functions bhi inherit hote hai.
- aur uske sath state variables bhi inherit hote hai.

import contract :-
- for this i didn't write any code or make the changes in files and code, it is done virtually like for understanding , you can try yourself i will provide the clear explanation of import contract.
- we can import the contract from different file as well, so like if we want to import a contract which is present in "Parent.sol" file to the file like "Child.sol" , so we can write -> import "./Parent.sol"; to our Child.sol file
- the "./" means both the files are present in same directory.
- advantage of import contract thing is :-
	- if we had multiple contracts , then we can make the contracts more manageable.
	- we can split the big file code to multiple code files , for the code reuse purpose
	- improve the code maintainbilty and readability.
	- we don't need to write export or something to the contract, it is implemented by it own.

Abstract Contracts :-
- Abstract contracts are contracts that can have functions without its implementation.
- To make a contract abstract you have to use "abstract" keyword.
- Function without implementation must contain "virtual" keyword.
- The abstract contract defines the structure of the contract and any derived contract inherited from it should provide an implementation for the incomplete functions. And that functions should contain "override" keyword.
- And if the derived contract is also not implementing the incomplete functions then derived contract wil also be "marked as abstract".
- Contract marked as abstract contract cannot be depolyed.
- All the next explanation and code is present in Abstract.sol file.

01-Solidity OOP LIVE Video complete.

solidity oop live - 2 notes :-
	
Interface :-
- interfaces are the more restricted form than abstract contract.
- An interface is an agreement or a contract between itself and any contract that implements it.
- Interface functions are implicitily "virtual", no need to write "virtual" keyword in function declaration.
	- Interfaces restrictions :-
		- They can only inherit from other intefaces but not from other 			contracts.
		- They cannot declare state variables.
		- They cannot declare constructor.
		- Function can be declares but not implemented.
		- All declared functions must be external.
- all the code with explanation of code is present in "Interface.sol" file.
- Interface are also cannot be depolyed to the blockchain, this is just a blueprint.

Polymorphism :-
- polymorphism is one of the core concepts of object oriented programming (OOP) and describes situation in which something occurs in serveral different forms.
- Poly means many forms , matalb ki me ek function ke namm se multiple function bana sakta hai.
- all the code with explanation of code is present in "Polymorphism.sol" file.

Events :-
- event ek tarah ka ye bhi ek function hai.
- ham same name se event nahi bana sakte.
- jab event bana lete hai then to event bhi ek type ka function he hai , to event ko call karne ka tarika hai, by using "emit" keyword.
- after depolying and testing contract, jab ham transaction check kare ide me to waha "logs" nam se data present hoga.
- the "logs" are basically thing in which the event data is stored.
- so log is a place where everything is maintained.
- all the code with explanation of code is present in "Event.sol" file.
- events jo hai wo kaffi useful hote hai, specially tab jab jab aap koi third party application jase ki koi external system hai jo ki ye detect kar raha hai ki smart contract me kuch hua ki nahi hua
- events me logs hota hai, like jo bhi kuch hua hamne kiya uska ek log maintained hoga.
- consider hamare smart contract ko hazaro log use kar rahe hai , to ham logs ke help ke through ye dekh sakte hai konse user ne kya kya kiya , kitne ether transfer kiye and all the other information jo ki log me store ho rahi hai.
- Hamara Gas cost kaffi bachta hai by using events so in comparing to returning some values in function with event and emit , event emit required requires the less gas cost.
- storage cost of events is also less, rather than storing storing historical data in state variables.
- so in general the summary is there are three advantages of using events :-
     	1. External system communication medium 
     	2. Gas consumption
    	3. Historical data
- Events are inheritable members of contracts.
- When you call them, they cause the argumments to be stored in trasactions law-a special daa structure in the blockchain.
- These logs are associated with theadress of the contract, are incorporated into the blockchain and stay as long as block is accesible.
- The log and event data is not accesible from within contacts (not even from the contract that created them).

Wallet Smart Contract Assignment :-
	1) The addres which will deploy the contract will become the owner of the 		wallet contract.
	2) Owner of the contract can send the ether to the any of eth EOA 		accounts.
	3) anyone can send the ether to the owner account address.
	4) owner of the contract can see the balance of it's own account.
	5) Also create one event which get emitted whenever owner recieve ether 		from some other EOA account.
	- Solved this assignment in file "WalletSmartContractAssignment.sol"